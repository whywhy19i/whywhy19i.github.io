<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>强化学习第三课</title>
      <link href="/2024/05/21/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E8%AF%BE%20%E8%B4%9D%E5%B0%94%E6%9B%BC%E6%9C%80%E4%BC%98%E5%85%AC%E5%BC%8F/"/>
      <url>/2024/05/21/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%89%E8%AF%BE%20%E8%B4%9D%E5%B0%94%E6%9B%BC%E6%9C%80%E4%BC%98%E5%85%AC%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="1-motivating-example"><a href="#1-motivating-example" class="headerlink" title="1.motivating example"></a>1.motivating example</h1><ul><li>选择action value大的值能得到最好的效果</li><li>从数学上来讲，对于局部的最优化最后的策略会得到最好的策略（需要证明）</li></ul><h1 id="2-optimal-policy"><a href="#2-optimal-policy" class="headerlink" title="2.optimal policy"></a>2.optimal policy</h1><ul><li><p>定义：</p><pre><code> ![image.png](https://cdn.nlark.com/yuque/0/2024/png/40530834/1713857829513-7c539d25-49a3-43e2-8f08-f8bbafb53e92.png#averageHue=%23e3e1e3&amp;clientId=u08314124-00a0-4&amp;from=paste&amp;height=114&amp;id=ub4c290cc&amp;originHeight=142&amp;originWidth=636&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=43446&amp;status=done&amp;style=none&amp;taskId=u50dc6a92-0fba-413e-867f-9173739c224&amp;title=&amp;width=508.8)&lt;br /&gt;       ![image.png](https://cdn.nlark.com/yuque/0/2024/png/40530834/1713857859873-737eb264-5605-4515-bae6-ed87e35a3529.png#averageHue=%23b6b8ad&amp;clientId=u08314124-00a0-4&amp;from=paste&amp;height=81&amp;id=u389914b7&amp;originHeight=101&amp;originWidth=646&amp;originalType=binary&amp;ratio=1.25&amp;rotation=0&amp;showTitle=false&amp;size=34777&amp;status=done&amp;style=none&amp;taskId=u812e94cf-4f88-41bc-9421-0b170584040&amp;title=&amp;width=516.8)</code></pre></li></ul><h1 id="3-贝尔曼最优公式"><a href="#3-贝尔曼最优公式" class="headerlink" title="3.贝尔曼最优公式"></a>3.贝尔曼最优公式</h1><p>贝尔曼最优公式实际上是将贝尔曼公式中的策略pi作为一个变量，来求解出最优的pi解，进而求解出最优的v。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40530834/1715263116777-59715e07-1989-43ae-982c-30e794088a1e.png#averageHue=%23e2e0e4&amp;clientId=u501a87b0-f5bd-4&amp;from=paste&amp;height=106&amp;id=u01fcad3d&amp;originHeight=159&amp;originWidth=1330&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=114723&amp;status=done&amp;style=none&amp;taskId=u29859608-a77b-4754-a309-d6b86279b41&amp;title=&amp;width=886.6666666666666" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2024/png/40530834/1715263157456-5387d82e-3289-46aa-8b27-d93fe5c7e39d.png#averageHue=%23e4e2e4&amp;clientId=u501a87b0-f5bd-4&amp;from=paste&amp;height=357&amp;id=uc79ace9e&amp;originHeight=535&amp;originWidth=1202&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=336271&amp;status=done&amp;style=none&amp;taskId=u3f5c9ef2-6ce4-4602-94a3-d52668cc00b&amp;title=&amp;width=801.3333333333334" alt="image.png"><br>首先是求解最优化问题：<br>在两个未知量的情况下如何求出pi的最优解<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40530834/1715263269431-cae8e916-1c31-476c-a304-f0f1fe665d69.png#averageHue=%23a0b2a1&amp;clientId=u501a87b0-f5bd-4&amp;from=paste&amp;height=398&amp;id=u5202a524&amp;originHeight=597&amp;originWidth=1309&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=510904&amp;status=done&amp;style=none&amp;taskId=u88fc9fe6-0f0e-4751-a39a-8fe133416f5&amp;title=&amp;width=872.6666666666666" alt="image.png"><br>实际上解决方法参考图中公式，由于x为自变量，因此对于a来说只要是a的偏导数为0，就是a的局部最优解，对a的局部最优解代入后再求出x就能得到x的值，而贝尔曼最优公式也是可以求出解的。<br> <img src="https://cdn.nlark.com/yuque/0/2024/png/40530834/1715263452005-b88cf7f2-7d2d-4886-b8e2-94d7cf335ed2.png#averageHue=%23e3e1e4&amp;clientId=u501a87b0-f5bd-4&amp;from=paste&amp;height=163&amp;id=u15cca564&amp;originHeight=245&amp;originWidth=1279&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=137061&amp;status=done&amp;style=none&amp;taskId=u94fbbc0a-ba86-4b1d-ac38-8d7dd55f7b7&amp;title=&amp;width=852.6666666666666" alt="image.png"><br>下一步，vs可以写成如图所示的形式，由于pi代表策略，因此pi对s的求和为1，通过权重定理可知，对于权重为定值的情况下，为q最大的值赋最高的权重最终得到的结果是最大的。当pi取1时就是最大值<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40530834/1715766909492-2724b009-d169-40da-a97d-baee4aa872db.png#averageHue=%23e1dfe2&amp;clientId=udbde7e6a-3beb-4&amp;from=paste&amp;height=87&amp;id=u97075c5b&amp;originHeight=130&amp;originWidth=837&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=86550&amp;status=done&amp;style=none&amp;taskId=ua9dbc32d-b4f7-4655-bc1a-16394e465fe&amp;title=&amp;width=558" alt="image.png"><br>下面一步右边的max（pi）可以看作是一个v的函数<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40530834/1715766998898-b387d849-76da-4097-92fa-2b188dc71f0b.png#averageHue=%23e4e2e4&amp;clientId=udbde7e6a-3beb-4&amp;from=paste&amp;height=85&amp;id=u89eee4b7&amp;originHeight=127&amp;originWidth=724&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=56878&amp;status=done&amp;style=none&amp;taskId=uf43027f3-4bdf-4786-8699-03e2669497d&amp;title=&amp;width=482.6666666666667" alt="image.png"><br>变换成了v=f（v），这种形式的式子可以使用迭代来求解，首先我们使用两个前置的数学知识：不动点和压缩映射定理。<br>不动点：<img src="https://cdn.nlark.com/yuque/0/2024/png/40530834/1715767183897-aea388ce-2955-461f-8ccd-e0d2be772465.png#averageHue=%23e4e2e4&amp;clientId=udbde7e6a-3beb-4&amp;from=paste&amp;height=109&amp;id=u7a3e82d1&amp;originHeight=164&amp;originWidth=789&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=49033&amp;status=done&amp;style=none&amp;taskId=u2cd0508d-94b4-46ec-89ac-d966a9b453a&amp;title=&amp;width=526" alt="image.png"><br>压缩映射：<img src="https://cdn.nlark.com/yuque/0/2024/png/40530834/1715767226373-dfc0542c-a94c-4713-8136-6e398385c5f9.png#averageHue=%23e5e3e5&amp;clientId=udbde7e6a-3beb-4&amp;from=paste&amp;height=111&amp;id=u2d9ee993&amp;originHeight=167&amp;originWidth=1160&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=98829&amp;status=done&amp;style=none&amp;taskId=u1075aa12-eb6e-459d-a030-c84e52651ba&amp;title=&amp;width=773.3333333333334" alt="image.png"><br>（套入函数之后函数的值域收缩了）<br>如果满足这两个点的函数，则具备压缩映射定理：在压缩映射定理中<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40530834/1715767507532-2dff3f39-3db8-4fe6-8d97-2c38d43268d6.png#averageHue=%23c9c7c0&amp;clientId=udbde7e6a-3beb-4&amp;from=paste&amp;height=213&amp;id=ua6ce38c9&amp;originHeight=320&amp;originWidth=1232&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=222514&amp;status=done&amp;style=none&amp;taskId=u1db701df-2869-4292-a374-96feb6986f7&amp;title=&amp;width=821.3333333333334" alt="image.png"><br>存在一个x满足fx等于x，x是唯一的，可以通过迭代的方法求出x，证明方法是首先数列是收敛的因此一定存在极限，而函数两边同时求极限可以得到不动点。<br>对于贝尔曼最优公式，显然是满足压缩映射的。<br><img src="https://cdn.nlark.com/yuque/0/2024/png/40530834/1715769925747-6cc37eb3-de1a-4452-bdb2-85ab1b42311d.png#averageHue=%23e4e2e4&amp;clientId=udbde7e6a-3beb-4&amp;from=paste&amp;height=221&amp;id=u5da91b41&amp;originHeight=331&amp;originWidth=1277&amp;originalType=binary&amp;ratio=1.5&amp;rotation=0&amp;showTitle=false&amp;size=167054&amp;status=done&amp;style=none&amp;taskId=u114d0e7f-ec71-44bd-937a-6808dbb9e99&amp;title=&amp;width=851.3333333333334" alt="image.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 强化学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>强化学习第一课</title>
      <link href="/2024/05/21/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E7%AC%AC1%E8%AF%BE-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%EF%BC%88Reward,return,MDP%E7%AD%89%EF%BC%89/"/>
      <url>/2024/05/21/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E7%AC%AC1%E8%AF%BE-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%EF%BC%88Reward,return,MDP%E7%AD%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><a name="Ti16y"></a></p><h3 id="1-reward"><a href="#1-reward" class="headerlink" title="1.reward"></a>1.reward</h3><p>一般来讲正数为鼓励，正向的鼓励对智能体有奖励，负向的鼓励对智能体有惩罚，0表示无惩罚也无奖励。<br>特殊情况下用表格法，在一般情况下用条件概率。<br>reward依赖于当前状态和action，而不依赖于下一个状态（不看结果只看过程）（实际上是下一个状态可以由当前状态和action表示）<br><a name="P5vgv"></a></p><h3 id="2-trajectory和return"><a href="#2-trajectory和return" class="headerlink" title="2.trajectory和return"></a>2.trajectory和return</h3><p>trajectory是从头到尾的一个链条<br>return是从头到尾的reward之和<br>return用来判断trajectory的好坏程度<br><a name="AkBlj"></a></p><h3 id="3-discounted-return"><a href="#3-discounted-return" class="headerlink" title="3.discounted return"></a>3.discounted return</h3><p>通过引入discount rate来防止return的发散，得到discount return，<br><a name="GPZTc"></a></p><h3 id="4-episode"><a href="#4-episode" class="headerlink" title="4.episode"></a>4.episode</h3><p>Option 2: Treat the target state as a normal state with a policy. The agentcan still leave the target state and gain r=+l when entering the target state.我们把target state当作正常的一个状态给与reward。<br><a name="M74jK"></a></p><h3 id="5-MDP-马尔科夫决策"><a href="#5-MDP-马尔科夫决策" class="headerlink" title="5.MDP 马尔科夫决策"></a>5.MDP 马尔科夫决策</h3>]]></content>
      
      
      
        <tags>
            
            <tag> 强化学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>考研总结</title>
      <link href="/2024/04/18/%E8%80%83%E7%A0%94%E6%80%BB%E7%BB%93/"/>
      <url>/2024/04/18/%E8%80%83%E7%A0%94%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h3 id="个人基本信息"><a href="#个人基本信息" class="headerlink" title="个人基本信息"></a>个人基本信息</h3><p>首先讲一下个人的基本情况，高中数学竞赛辽宁省一等奖，高考数学145分（被导数最后一问斩于马下），正当准备自主招生当酒吧舞✌的时候，自主招生取消了🤡，不过还是凭借正常发挥的高考分来到了北交学计算机。大学时候不爱上课，早上起不来，于是绩点也不算很理想，等到大三时深感前途未卜，于是准备考研，但是由于摆烂习惯了，虽然3，4月份时候把书都买好了，但基本没看下去两眼，408中的计组计网是线上上课学的，基本跟没学一样，于是7月份的时候确定了考只考数据结构和操作系统的本校。本来应该六月末七月初开始的，然后因为小学期又耽误了一个月，直到7月20号我坐上了回家的火车，才开始了正式的考研复习。</p><h3 id="初试的时间安排"><a href="#初试的时间安排" class="headerlink" title="初试的时间安排"></a>初试的时间安排</h3><p>开始的时候我保持一天6个小时的学习，由于数学的内容很多且相较而言难度更大，所以7-8月份几乎每天60%的时间都在学数学，剩下的时间平均分配给背单词，看徐涛网课，看专业课上面。等到九月份回学校的时候，基本保证每天八个小时的学习（因为我早上起不来，所以基本都是12点开始学，学到晚上十点，中间吃饭加休息两个小时左右）这个作息也一直坚持到了考研初试结束，期间也尝试过早起学习，不过深感效率太低，困的我完全无法投入进去，所以尝试了一天便作罢。</p><h3 id="初试科目"><a href="#初试科目" class="headerlink" title="初试科目"></a>初试科目</h3><h5 id="数学1-：126"><a href="#数学1-：126" class="headerlink" title="数学1 ：126"></a>数学1 ：126</h5><p>对于数学而言，我感觉我还是付出最多的，考前的期望值是稳120冲到135附近，虽然最后还是差了一些，线面积分的算数算错了😩，但也还算是一个不错的成绩。<br>对于所有考研的同学我想说，其实你能不能考上百分之75甚至更多是取决于你的数学（当然不考数学的当我没说），哪怕是计算机的考研天花板11408的霸主软微，每年的录取的数一平均分数线也不过才110多一些，像北交这样的学校录取的数一平均分也就100左右，如果你数学能够保证过120分，那么你相当于超过大部分人20分以上，这基本相当于你已经半只脚上岸了，数学是拉开差距最大的学科。<br>下面讲一下我的数学学习过程，7月份刚回家的时候买了660，当时看网上推荐听武忠祥和李永乐的课，我听了两节感觉他们俩的节奏确实不适合我，我听一半就想玩手机了（当然不是说这俩老师不好，萝卜青菜各有所爱），然后就去听张宇的课，发现很对我的胃口，所有基础阶段听课听的是张宇的，不过当时说张宇的1000题太难了，我就买的660+李林880。660用了大概十天做完，感觉深度确实不够，而且时间比较紧张，我就没有复盘就在八月初直接开了强化，实际上对我提升最大的还是强化阶段，强化用的书就是880，虽然李林今年冲刺阶段的习题完全一坨，但是880的质量还是很靠谱的，而且b站上有一个免费讲解880的up（叫没咋了），所以即便遇到不会的问题，也可以直接去b站听讲解。高数和线代的强化我听的是张宇的，概率论的强化我听的是方浩的，虽然方浩的讲课风格比较狂妄，但是确实是有真东西的。9月末强化阶段结束，当时的我处于一种说会也会说不会也不会的状态，所以我就直接开了真题，由于真题是我做的第一个套卷，所以开始的成绩比较惨不忍睹，09，10那两套卷也就100出头，很多概念性公式性的题目完全没思路，所以我就边复盘边对知识点进行总结，我在b站上关注了好几个比较有干货的up主（比如你的葫芦，没咋了，当年线代等等），然后强化对每个知识点的处理方法，保持每天一套卷的速度，在十月中旬刷完了真题，平均分在120-130左右。此时我的进度基本赶上了在3月开始甚至更早开始的进度，就进入了冲刺阶段，在冲刺阶段我大概做了30套卷子左右，张宇8+4，李林6+4，李艳芳三套卷，超越的选填，还有一些零零散散的卷子，我觉得今年出的最好的还是张宇的卷子，今年的考试题也证明了张宇试题的先见性，与李林一成不变，吃着老本的6+4相比，张宇的八套卷可以说是推陈出新，很多很新颖的题目都给我留下深刻的印象，于我而言模拟题的意义并不是在于你一定要压中考试的原题，而是锻炼你在考试时候遇到你没见过的问题时你处理问题解决问题的能力，而结果大家都知道，今年的数一考的很难，我在考场上也是汗流浃背，直到最后十分钟才勉强写完，而且还犯了一些计算错误，但是锻炼解决问题的能力绝对会让你在这种难度的考试中取得先机的。</p><h5 id="政治：71"><a href="#政治：71" class="headerlink" title="政治：71"></a>政治：71</h5><p>之前一直听说北京的政治压分很严重，我感觉倒是还好，我考完出来对答案选择大概是扣了十分左右，然后从总分来看大题是得了30分左右，不过与别的省相比肯定是压分了，但是没有想象中压那么多。<br>政治前期基本不用准备，喜欢听徐涛讲课的就在休息时间二倍速挂着他的课听一听，知道政治都学啥就行了。等到十月份的时候腿姐会出强化班讲选择和大题，有时间的可以听一听背一背，没时间的不听不背其实也真没啥影响🤣。然后大头在十一月和十二月，十一月的时候肖八就出了，这个时候一定要第一时间写肖八，如果你的纸质版没到就写电子版，一天一套选择，然后写完判完去b站看一个叫大牙考研的up主，他会给你归纳肖八涉及到的知识点，一定要全看一遍，二倍速看，看完加写完差不多十来天，然后再写一遍肖八选择，喜欢用纸质就写纸质，其实小程序就绰绰有余了，在肖四出来之前要多刷选择，小程序上的肖八腿四涛6米鹏3我都刷了一遍，感觉对我政治选择的提升还是蛮大的，第一遍肖八的平均分也就20出头，后面基本能保证在30以上了。然后就是最重要的肖四，肖四我推荐背研木易的精缩，开始时候我还对精缩保持怀疑，知道我看到了肖四的答案让我不得不褪去了怀疑，肖四的原文实在是太多太多了，而且你在考场上其实用精缩是完全够用的，人不到逼自己一把的时候永远不知道自己有多厉害，大题只要点答上，字多写点，分数正常都不会差的。</p><h5 id="英语：55"><a href="#英语：55" class="headerlink" title="英语：55"></a>英语：55</h5><p>这个真没啥好说的了，英语要是听我的纯纯误人子弟了，大部分人都能比我考得高，我英语下的功夫也少，单词也没背完，甚至真题最后也没刷完一遍，阅读听的是颉斌斌的，不过我感觉颉斌斌对我这种基础差的还是有些奇效的，我英语考55的最重要原因是七选五一个没对，直接白送十分（考试时候我还感觉我写的都对呢），不过对我这种四六级擦边过，从小到大的英语苦手，而且也没投入精力来说，英语这个分数已经算是可以接受的了。</p><h5 id="专业课（数据结构操作系统）：127"><a href="#专业课（数据结构操作系统）：127" class="headerlink" title="专业课（数据结构操作系统）：127"></a>专业课（数据结构操作系统）：127</h5><p>专业课考的确实是超乎我意料的高，实际上我在专业课上也没有投入太多的精力，一方面是本校考的确实不算难（所以下一年就改408了），另一方面是数据结构和操作系统就那么些练习题，不过我也是按照408的数据结构和操作系统难度在准备专业课，开始的时候买了王道的四本书，然后把数据结构和操作系统的课后题都刷了一遍，剩下的就是用的本校专门做自命题的一个机构的材料了，总体来说北交的专业课难度挺低的，不过已经是过去时了，明年正式改考408了，原来数据结构和操作系统自命题有电科和北交，现在只剩电科这个老大了，只能说408的改制已经势不可挡了，但我认为11自命题的学校仍然还是版本答案，408的池子实在是太大了。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>回顾考研的那几个月，深刻感受到了人生在重大转折节点时候的无能为力，即便我认为我的心态算是好的，也不得不去考虑失败之后的路，人生是旷野，其实可能以后回想起来，考研的成功与否就像小学时候忘带了红领巾，你以为你的人生彻底完了，但实际上，那只是再平常不过的一件事情。无论考上或是考不上，都将他当成是人生的一种体验吧。</p><hr><h2 id="title-考研总结date-2024-04-18-16-17-34tags-考研"><a href="#title-考研总结date-2024-04-18-16-17-34tags-考研" class="headerlink" title="title: 考研总结date: 2024-04-18 16:17:34tags: 考研"></a>title: 考研总结<br>date: 2024-04-18 16:17:34<br>tags: 考研</h2>]]></content>
      
      
      
        <tags>
            
            <tag> 考研 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/04/18/hello-world/"/>
      <url>/2024/04/18/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
